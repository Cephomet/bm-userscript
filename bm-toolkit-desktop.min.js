// ==UserScript==
// @name Battlemetrics Toolkit - Desktop
// @namespace https://www.battlemetrics.com/
// @version 11.52
// @updateURL https://raw.githubusercontent.com/TempusOwl/bm-userscript/main/bm-toolkit-desktop.min.js
// @downloadURL https://raw.githubusercontent.com/TempusOwl/bm-userscript/main/bm-toolkit-desktop.min.js
// @description Modifies the rcon panel for battlemetrics to help color code important events and details about players.
// @author TempusOwl
// @match https://www.battlemetrics.com/*
// @match https://www.battlemetrics.com
// @icon https://www.google.com/s2/favicons?sz=64&domain=battlemetrics.com
// @grant GM_addStyle
// @run-at document-end
// ==/UserScript==

**IDs**: ${pSteamID} // ${pEOSID}
**Server**:
**Infraction**:
**Evidence Linked Below**:`;copyToClipboard(textToCopy)});openURLButton.addEventListener("click",()=>{const pSteamID=getInnerTextByTitle("765","SteamID MISSING?");if(pSteamID&&pSteamID!=="SteamID MISSING?"){const url=`https://communitybanlist.com/search/${pSteamID}`;window.open(url,"_blank")}else{alert("SteamID is missing or invalid!")}});buttonStyles()}function buttonStyles(){const style=document.createElement("style");style.innerHTML=`
    .copy-button-style {
        width: 140px;
        height: 40px;
                                left:10px;
        border-radius: 1em 1em 0 0;
        background-color: #2d65a5;
        color: white;
        border: none;
        font-size: 15px;
        font-weight: bold;
        cursor: pointer;
        position: absolute;
        top: 100px;
        z-index: 99999;
        transition: background-color 0.3s, transform 0.2s;
    }
    .copy-button-style:hover {
        background-color: #0077ff;
    }
    .open-url-button-style {
        width: 140px;
        height: 25px;
                                left:10px;
        border-radius: 0 0 1em 1em;
        background-color: #e5a411;
        color: white;
        border: none;
        font-size: 15px;
        font-weight: bold;
        cursor: pointer;
        position: absolute;
        top: 120px;
        z-index: 99999;
        transition: background-color 0.3s, transform 0.2s;
    }
    .open-url-button-style:hover {
        background-color: #ffb500;
    }
`;document.head.appendChild(style)}function copyToClipboard(text){const textarea=document.createElement("textarea");textarea.style.position="fixed";textarea.style.opacity="0";textarea.value=text;document.body.appendChild(textarea);textarea.select();document.execCommand("copy");document.body.removeChild(textarea)}const playerPageExists=document.querySelector("#RCONPlayerPage");if(playerPageExists){ensureElementExists("copy-button",createCopyButton);ensureElementExists("CBL-info",runDataFetching)}else{removeElementById("copy-button");removeElementById("open-url-button");removeElementById("CBL-info")}function ensureElementExists(elementId,creationFunction){if(!document.getElementById(elementId)){creationFunction()}}function removeElementById(elementId){const element=document.getElementById(elementId);if(element){element.remove()}}}copyButtoANDSteamIDs();function getInnerTextByTitle(titlePart,defaultValue){return document.querySelector(`[title*="${titlePart}"]`)?.innerText||defaultValue}const graphqlEndpoint="https://communitybanlist.com/graphql";async function runDataFetching(){if(isFetching){console.log("CBL script already in progress... Skipping...");return}const pSteamID=getInnerTextByTitle("765","SteamID MISSING?");if(pSteamID&&pSteamID!=="SteamID MISSING?"){try{isFetching=true;await fetchSteamUserData(pSteamID)}catch(error){console.error("Error fetching Steam user data:",error)}finally{isFetching=false}}else{console.error("Invalid Steam ID")}}async function fetchSteamUserData(steamID){await new Promise(resolve=>setTimeout(resolve,500));const maxRetries=1;const retryDelay=3e3;let attempt=0;let success=false;while(attempt<maxRetries&&!success){try{attempt++;console.log(`CBL API Query ${attempt}: Fetching user data for SteamID ${steamID}`);const response=await fetch(graphqlEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:`
                                    query Search($id: String!) {
                                        steamUser(id: $id) {
                                            riskRating
                                            activeBans: bans(orderBy: "created", orderDirection: DESC, expired: false) {
                                                edges { node { id } }
                                            }
                                            expiredBans: bans(orderBy: "created", orderDirection: DESC, expired: true) {
                                                edges { node { id } }
                                            }
                                        }
                                    }
                                `,variables:{id:steamID}})});if(!response.ok){throw new Error(`HTTP error! Status: ${response.status} (${response.statusText})`)}const data=await response.json();if(!data||!data.data||!data.data.steamUser){throw new Error("Invalid response format or user not found.")}const user=data.data.steamUser;const riskRating=user.riskRating||"N/A";const activeBansCount=user.activeBans.edges.length||0;const expiredBansCount=user.expiredBans.edges.length||0;displayUserData(riskRating,activeBansCount,expiredBansCount);console.log("Fetch successful!");success=true}catch(error){console.error(`Attempt ${attempt} failed: ${error.message}`,error);if(attempt<maxRetries){console.log(`Retrying in ${retryDelay/1e3} seconds...`);await new Promise(resolve=>setTimeout(resolve,retryDelay))}else{console.error("Max retries reached. Fetch operation failed.");displayUserData("N/A","N/A",0);success=true}}}}function displayUserData(riskRating,activeBansCount,expiredBansCount){const CBL=document.createElement("div");CBL.id="CBL-info";CBL.style=`
                                width: 140px;
                                height: 120px;
                                left:10px;
                                top: 170px;
                                background: #000000bd;
                                color: white;
                                border: none;
                                border-radius: 15% 15% 15% 15%;
                                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                                padding: 2px;
                                position: absolute;
                                text-align: center;
                                z-index: 99998;
                            `;let riskColor="white";if(riskRating>=1&&riskRating<=5){riskColor="orange"}else if(riskRating>5){riskColor="red"}CBL.innerHTML=`
                                <h4 style="font-size: 1.2em; font-weight: bold; color: ${riskColor};">
                                    Risk Rating  ${riskRating}/10
                                </h4>
                                <h4 style="font-size: 12px; font-weight: bold;">Active Bans: ${activeBansCount}</h4>
                                <h4 style="font-size: 12px; font-weight: bold;">Expired Bans: ${expiredBansCount}</h4>
                            `;document.body.appendChild(CBL)}function colorDialogMenus(){const navTools={changeMapWarning:[{phrase:"Change Layer",styles:{color:"red",fontStyle:"bold",textAlign:"center",fontSize:"200pt"}},{phrase:"Set Next Layer",styles:{color:"lime",fontStyle:"bold",textAlign:"center",fontSize:"24pt"}},{phrase:"Kick",styles:{color:"orange",fontStyle:"bold",textAlign:"center",fontSize:"48pt"}},{phrase:"Warn",styles:{color:"lime",fontStyle:"bold",textAlign:"center",fontSize:"24pt"}}],orgGroup:[{phrase:"Arma",styles:{background:"#333300"}},{phrase:"Squad Mod",styles:{background:"#2b9937"}},{phrase:"Comp",styles:{background:"lime"}},{phrase:"Squad Admin",styles:{background:"#119ab7"}},{phrase:"Rust Admin",styles:{background:"#672c00"}},{phrase:"Org",styles:{background:"black"}},{phrase:"Recruiter",styles:{background:"#cc6600"}},{phrase:"Minecraft Admin",styles:{background:"#8d0cff"}},{phrase:"Squad Event",styles:{background:"#660033"}}],playerMenuDialog:[{phrase:"Warn",styles:{color:"lime"}},{phrase:"Squad List",styles:{color:"gold"}},{phrase:"Kick",styles:{color:"orange"}},{phrase:"Ban",styles:{color:"red"}},{phrase:"Force Team Change",styles:{color:"#db4dff"}},{phrase:"Remove Player from Squad",styles:{color:"#804d00"}},{phrase:"Action - Reset Squad Name",styles:{color:"gold"}}],serverCommands:[{phrase:"Warn",styles:{color:"lime"}},{phrase:"Kick",styles:{color:"orange"}},{phrase:"Ban",styles:{color:"red"}},{phrase:"Force Team Change",styles:{color:"#db4dff"}},{phrase:"Remove Player from Squad",styles:{color:"#804d00"}},{phrase:"Action - Reset Squad Name",styles:{color:"gold"}},{phrase:"Next Layer",styles:{color:"lime",fontSize:"16pt"}},{phrase:"Change Layer",styles:{color:"red",fontStyle:"bold",fontSize:"8pt"}},{phrase:"Squad List",styles:{color:"gold",fontSize:"16pt"}}]};function applyStyles(elements,styles){elements.forEach(el=>{styles.forEach(({phrase,styles})=>{if(el.textContent.includes(phrase)){Object.assign(el.style,styles)}})})}setTimeout(()=>{applyStyles(document.querySelectorAll(".modal-title"),navTools.changeMapWarning);applyStyles(document.querySelectorAll(".css-4ey69y"),navTools.orgGroup);applyStyles(document.querySelectorAll(".css-f5o5h6 a, .css-f5o5h6 button"),navTools.playerMenuDialog);applyStyles(document.querySelectorAll(".css-1ixz43s a, .css-1ixz43s button"),navTools.playerMenuDialog);applyStyles(document.querySelectorAll(".css-yun63y a, .css-yun63y button"),navTools.serverCommands)},500)}colorDialogMenus()}}setInterval(async()=>{await updateLogic()},updateRate)}function observeDOMChanges(){const observer=new MutationObserver((mutationsList,observer)=>{for(const mutation of mutationsList){if(mutation.type==="childList"||mutation.type==="attributes"){const targetElement1=document.querySelector(".ReactVirtualized__Grid__innerScrollContainer");const targetElement2=document.querySelector(".navbar-brand");if(targetElement1||targetElement2){console.log("Target element detected. Starting code...");observer.disconnect();runCode();break}}}});observer.observe(document.body,{childList:true,subtree:true,attributes:true})}observeDOMChanges();
